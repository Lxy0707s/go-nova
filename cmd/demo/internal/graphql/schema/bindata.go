// Code generated by go-bindata.
// sources:
// ../module/aggregation/aggregation_graphql/aggregation_sdl/aggregation.graphql
// ../module/detect/detect_graphql/detect_sdl/detect.graphql
// ../module/dictionary/dictionary_graphql/dictionary_sdl/dictionary.graphql
// ../module/equipinfo/equipinfo_graphql/equipinfo_sdl/equipinfo.graphql
// ../module/resource_center/resource_graphql/resource_sdl/resource.graphql
// ../module/task/task_graphql/task_sdl/net_detect.graphql
// ../module/task/task_graphql/task_sdl/resource.graphql
// ../module/task/task_graphql/task_sdl/task_group.graphql
// ../internal/graphql/sdl/base.graphql
// ../internal/graphql/sdl/demo.graphql
// ../internal/graphql/sdl/schema.graphql
// DO NOT EDIT!

package schema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ModuleAggregationAggregation_graphqlAggregation_sdlAggregationGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x4d\x6b\x13\x41\x18\xbe\x2f\xec\x7f\x18\xe8\xd1\x7f\x90\x9b\x58\x94\x80\x07\xb1\x7a\x2a\x65\x19\xb2\x6f\x96\xc1\xed\xec\x32\x33\x8b\x88\xf4\x50\x28\x1a\x8a\x95\x08\xc1\x60\x52\x35\x5b\xd4\xf6\x94\xf4\x90\x56\x9a\x45\xfa\x67\x32\xb3\xc9\xbf\x90\xfd\x48\xbb\x9f\x21\x27\x3d\xce\xf3\xbe\x3b\xef\xf3\x3c\xf3\xbc\xbb\x85\x16\xb7\x3d\x39\xfc\x26\x27\x37\x72\xd6\x9b\x07\x81\x3c\xf6\x65\xa7\xbf\xf0\x2f\x1e\xc8\xce\xbb\xa5\x7f\x35\xbf\xf5\xd5\xe1\x44\xd7\xc4\x1b\x17\xd0\x23\x8f\xd9\x0f\x2d\x8b\x81\x85\x05\x71\xe8\x8b\x08\x7b\xab\x6b\x08\x21\x84\xef\x61\xc3\x26\x5c\x34\xd0\x6e\xa1\x73\x2f\x69\x74\xb1\x05\x06\xa1\x6d\xa7\x81\x9e\x61\x0b\x9a\xb4\xed\x44\x55\x5d\x3b\xd0\x35\x5d\xab\xe7\x93\x52\xa8\x19\x4f\xcc\x06\x6a\x52\x91\x1c\x3c\x0e\xcc\xc8\x21\x2d\x06\x58\x80\x11\x15\x1a\x68\x47\x30\x42\xad\xa4\x20\x30\x7f\x65\x50\xbc\x0f\x79\x78\xdf\xa1\x44\x38\xa5\x5e\x66\x81\xa8\xf8\xde\x05\x46\x9c\xec\x38\x6e\x3b\xaf\x0d\x16\x91\xcc\x80\xd4\x11\xc0\xf3\x5f\x27\xb4\x4c\x03\x17\x6e\xf5\x5c\xb3\x12\xe7\x5e\xab\x05\x9c\x1b\xcc\xb3\xa3\xab\x76\x77\x92\xf3\x73\xcf\x86\x26\x75\x3d\x91\xb1\xb9\x8d\x89\xed\x31\xb8\x6b\x7d\x9c\x9c\xef\x5a\xf7\x62\xc3\xb7\x50\xd9\xe8\x70\x70\x84\xc2\xe1\x27\xf5\xf1\x5c\x7e\x98\x85\xc1\x54\xce\x7e\xa5\xde\x57\x8d\xab\x7c\x80\xd8\x95\x1c\xb2\x62\xde\x72\x4c\x48\xe1\xf4\xbd\xeb\x08\x8c\xd5\xe8\x7d\x91\x40\x51\xc4\x86\xc3\x57\x5e\x94\x87\x17\xc6\xaa\xaf\xfe\x3c\xb8\x56\xdd\xd3\x70\x7a\xb6\xaa\x75\x4f\xc2\xf3\x4b\xa4\xfa\xd7\xcb\xfe\x54\x8d\xaf\x52\xb8\x69\x86\xbd\x8b\xf9\x9f\x53\x35\xba\x51\x27\xe3\xe6\xb6\xfa\xfe\x73\x31\x39\xd3\x35\x12\xd3\x7a\x02\x22\x93\xd3\xa7\x84\x8b\x0d\xfc\x2a\xa7\x90\x0b\xcc\x44\x29\x04\x40\xf3\xc1\x48\xa5\xa8\xdf\x81\x3c\x1e\x85\x83\xa3\xfc\xd2\x24\x84\xe2\xc5\x35\xcd\x0c\xa9\x12\xa1\xff\xb7\x09\x39\x01\x05\xc6\xeb\x22\x57\x9f\xa9\xca\xab\xea\xc2\x53\x9f\x0e\x35\x9c\xaa\xcf\x97\x6b\x2c\x7d\x19\xef\xe9\x3a\x57\x37\x79\xe6\x7f\x67\xb1\xec\x8c\x96\x5f\x7e\x2c\x0e\x07\xb2\xdb\x49\x34\xad\x7e\xef\xf7\x9a\xb6\xc1\x86\x0d\x35\x1d\xe8\xda\xdf\x00\x00\x00\xff\xff\xc5\x28\xaa\x7d\x40\x06\x00\x00")

func ModuleAggregationAggregation_graphqlAggregation_sdlAggregationGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_ModuleAggregationAggregation_graphqlAggregation_sdlAggregationGraphql,
		"../module/aggregation/aggregation_graphql/aggregation_sdl/aggregation.graphql",
	)
}

func ModuleAggregationAggregation_graphqlAggregation_sdlAggregationGraphql() (*asset, error) {
	bytes, err := ModuleAggregationAggregation_graphqlAggregation_sdlAggregationGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../module/aggregation/aggregation_graphql/aggregation_sdl/aggregation.graphql", size: 1600, mode: os.FileMode(420), modTime: time.Unix(1663139633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ModuleDetectDetect_graphqlDetect_sdlDetectGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xc1\xae\x82\x30\x10\x45\xf7\x4d\xfa\x0f\x43\xde\x5f\x74\xfb\x88\x89\x0b\x37\xca\x8e\xb0\x98\xe8\x48\x1a\xa0\xd4\xe9\xb0\x30\xc6\x7f\x37\x80\x29\x2a\x92\x10\xb7\xf7\xde\x9e\x4e\xce\x1f\x78\x2c\xad\x43\x21\x60\xba\x74\x14\x04\x3c\x32\x36\x24\xc4\x5a\xc9\xd5\x13\xa4\x24\x74\x94\x94\xce\xd6\x51\x86\xa1\xca\xfa\xf0\xa6\x15\x00\x80\xc3\x86\xcc\x41\xd8\xba\x72\x0c\x04\x43\x15\x4c\xfe\xbe\x2e\xb4\xba\x6b\x15\x71\xdf\x40\xde\xba\x72\xc3\x6d\x63\x20\x1f\x71\x49\x31\x15\x59\x0b\x06\x5e\x8b\x81\x16\x79\xf5\x9e\x42\x57\x4b\x8f\x7b\xd2\x78\x08\xe2\x61\xd3\xe7\xbb\xf6\xb4\x7e\xfc\xcf\x84\xb2\x6a\x6e\x9d\xef\x64\x26\x6a\xdb\xa7\x0b\xb6\x92\x05\x5d\xf1\x4d\x91\x7c\xb0\x67\x8b\xdf\xcc\x3d\x02\x00\x00\xff\xff\xf2\xf1\x62\x17\xf1\x01\x00\x00")

func ModuleDetectDetect_graphqlDetect_sdlDetectGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_ModuleDetectDetect_graphqlDetect_sdlDetectGraphql,
		"../module/detect/detect_graphql/detect_sdl/detect.graphql",
	)
}

func ModuleDetectDetect_graphqlDetect_sdlDetectGraphql() (*asset, error) {
	bytes, err := ModuleDetectDetect_graphqlDetect_sdlDetectGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../module/detect/detect_graphql/detect_sdl/detect.graphql", size: 497, mode: os.FileMode(420), modTime: time.Unix(1663139633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ModuleDictionaryDictionary_graphqlDictionary_sdlDictionaryGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x55\x51\x6b\xda\x5e\x14\x7f\x0f\xe4\x3b\x5c\xe8\xe3\xff\x1b\xf8\xf6\x07\x61\xe4\x61\x30\xd8\xf6\x54\x46\xb8\x34\xb7\x12\x6a\xae\xc1\x5c\x07\x32\x0a\x96\xd5\x4d\xec\x1c\x0e\x64\x42\x75\x9d\x91\x0d\xcb\xa0\xb5\x63\xd6\xad\x66\xc3\x2f\xe3\xbd\x49\xbf\xc5\x48\x6e\xa2\x37\xd1\xb4\xda\x3d\x99\x27\x73\xfc\xfd\x6e\xce\xf9\x9d\xdf\x39\x77\x07\x78\xd3\x16\xed\x9c\xd1\xe1\x0d\x9d\xb4\x66\x8e\x43\xeb\x36\xad\xb5\x3d\xfb\xfc\x3f\x5a\x7b\x73\x6b\x5f\xcf\xa6\x36\x3b\x1a\xca\x12\x29\x9b\x08\x64\xf5\x3d\xa2\x17\x30\x2c\x96\x9f\x95\x4d\x64\x81\x57\xb2\x04\x00\x00\x3b\x80\x5e\xb4\x69\xf5\x17\x27\xf2\x98\x36\x87\xaa\x79\xdd\x22\x19\x3f\xb6\x1b\xe7\xbf\x98\xb3\x63\x5f\xf2\x63\x26\xcc\x21\x55\xc7\xfb\x85\x80\xc7\x9f\x27\x30\x87\x14\xbc\x5f\xf0\xa9\xb2\x74\x28\x4b\xb2\x94\x9e\xfd\xca\x84\x17\xf9\xea\x1a\xff\xa5\x6b\xc2\x07\xc2\x47\xc1\x64\x91\x58\x87\x3a\x13\xaf\x52\x8d\xf0\x25\x0b\x15\xd5\x04\x69\x15\x9e\x07\xf6\x8a\x08\x12\xa4\xfa\xa4\x80\xf1\x94\x14\x75\x9c\x9b\x83\x9b\x0d\x77\x70\xb5\xa4\x16\x86\x06\x5a\x81\x76\xbf\x3b\xf4\xec\x84\xbf\xa1\x3c\x32\x10\x26\xaa\x5f\x62\x94\x4a\x02\x5d\x1f\xb3\xca\x11\x7f\xb3\x08\x24\x25\x2b\x93\x5a\xe3\x97\xb7\xec\x47\xd8\x34\x5c\x20\x28\x81\x8c\x1f\x1c\x49\xec\x97\xc9\xda\xe3\xdb\xf6\x48\xac\x54\x53\x21\xc9\xac\x22\xb0\xce\x88\x7d\xbc\x12\x09\x25\x53\x5b\x4d\x00\x06\x34\x45\x1f\x19\xd0\x34\x75\x9c\x8b\x25\xb5\xfb\x98\x07\x43\x13\x1d\xfa\x46\x58\xb6\x80\x7b\x7a\x0c\xdc\xce\x07\xf6\x7e\xc0\xba\x93\x98\x2b\x04\xfa\xfd\x96\x10\xa5\x0a\x5c\x1e\x01\x85\x9e\x05\x9c\x4d\x7c\xf3\x60\xcf\x54\x5f\xbb\xa3\xde\x01\x2a\xc7\x8d\x70\x80\xca\xa9\xe0\x97\x30\x5f\x42\x71\x78\x10\xca\x6c\xe2\x99\x35\xfd\x12\x1d\x18\x0e\x67\xa2\x1b\xec\x93\x3d\x73\xc6\xac\xd9\x75\x47\xfd\xe8\xbf\x60\x06\x00\x77\x06\xbb\xbc\x0e\xc3\x8a\xe6\xb6\xce\x67\x7f\xba\xac\x77\xc3\x1a\x97\x4a\x96\x7d\xfe\xea\x0d\xfb\xb2\xa4\x63\xb3\x44\xc0\x23\x44\x16\x73\xad\xf8\xa1\x87\x0d\x37\xdf\x59\xcd\xc6\xda\x23\xb8\xc1\x50\xfd\xae\xd0\xc1\x89\x68\x78\x8b\xc0\x22\x09\xec\x9e\x32\x5a\x80\xd5\xbe\xb1\x8b\xbe\xc8\x41\x58\x4b\x30\x96\x24\xe6\x0a\x19\xd0\x9c\xeb\xeb\x4d\x3b\x9e\xfd\x8e\xab\x2c\x28\x16\x7a\xfe\x5f\xe5\x4a\x33\x7f\x02\xbc\x96\x54\xc1\xdc\xb2\x9f\x0e\xad\xf7\x16\xc7\x45\x29\xff\xaf\x69\x77\x36\x79\xcb\xb6\x67\xd4\xae\xa0\x5a\x03\x9a\x51\x99\x69\x6d\x49\xdf\x42\xbc\x0f\x4a\xf6\xfe\x25\xb4\x55\xbb\x82\x5f\x11\xee\xe9\x71\xfc\x16\xe7\x2a\x3d\x0f\x6e\x8b\xb5\x87\x5e\xcc\x60\x0b\x6d\xc2\x6b\xce\xa2\x3c\xba\xb3\xe6\x79\xa5\x87\x7f\x03\x00\x00\xff\xff\xef\x87\xaf\xeb\xc5\x09\x00\x00")

func ModuleDictionaryDictionary_graphqlDictionary_sdlDictionaryGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_ModuleDictionaryDictionary_graphqlDictionary_sdlDictionaryGraphql,
		"../module/dictionary/dictionary_graphql/dictionary_sdl/dictionary.graphql",
	)
}

func ModuleDictionaryDictionary_graphqlDictionary_sdlDictionaryGraphql() (*asset, error) {
	bytes, err := ModuleDictionaryDictionary_graphqlDictionary_sdlDictionaryGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../module/dictionary/dictionary_graphql/dictionary_sdl/dictionary.graphql", size: 2501, mode: os.FileMode(420), modTime: time.Unix(1663139633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ModuleEquipinfoEquipinfo_graphqlEquipinfo_sdlEquipinfoGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\xbf\x4a\x03\x41\x10\xc6\xfb\x83\x7b\x87\x81\xbc\xc5\xb6\x22\x12\xb0\xd3\x7e\x59\x72\xe3\x39\x98\x9d\xac\xb9\x59\x41\x24\x60\x61\x21\xd8\xa4\xb5\xb1\xb0\xb5\xb2\xd0\x42\x7d\x9d\xd3\xf8\x16\xb2\x59\x8d\x7b\xec\x0a\x36\xb9\xee\xbe\xdf\x37\x7f\xf6\x1b\x39\x77\x08\xbb\xa7\x9e\xdc\x98\x8f\x66\x87\xe1\xef\xa2\xae\x00\x00\xa8\x51\x10\xbf\x31\x4b\x94\x30\xf8\x34\x1b\x8b\x0a\xe0\x40\xe6\xc4\x6d\x0a\x42\xaf\x22\x58\xb7\xca\xe5\x4e\x8c\xf8\x4e\x15\x88\x69\x91\x45\x9f\x0d\x51\x83\x82\x13\x21\x6e\x35\x7b\xab\xa7\x64\x49\xd4\x66\xb5\x08\xb1\xf9\x9b\x85\x42\x31\xdd\x49\x70\x14\xea\x36\xe8\xf7\xb9\x33\x9e\x12\xa3\x16\xb2\xa8\xd2\x45\x26\x73\x34\xa1\xc4\xc8\x70\x41\xef\x9a\x4c\x5f\xd4\x55\x5d\x11\x3b\x2f\xb0\x87\xf2\x1d\xb4\xf3\x92\x26\x3d\x82\xd5\xd3\xd5\xfb\xcb\xf2\xe3\xf1\xb5\xbf\xbb\x89\x5a\xcc\x32\xed\xfe\xe3\xea\x2f\xdf\xa2\x10\xef\x50\x18\xb4\x73\x6c\xb8\xc5\xfd\x10\xc2\x76\x66\xad\x2d\x9f\xb7\xcb\xfe\xfa\xf9\x1f\xa7\x19\xad\xee\x1f\x72\x73\x7e\xaa\xc5\x57\x00\x00\x00\xff\xff\xc8\xf8\x63\xce\x8c\x02\x00\x00")

func ModuleEquipinfoEquipinfo_graphqlEquipinfo_sdlEquipinfoGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_ModuleEquipinfoEquipinfo_graphqlEquipinfo_sdlEquipinfoGraphql,
		"../module/equipinfo/equipinfo_graphql/equipinfo_sdl/equipinfo.graphql",
	)
}

func ModuleEquipinfoEquipinfo_graphqlEquipinfo_sdlEquipinfoGraphql() (*asset, error) {
	bytes, err := ModuleEquipinfoEquipinfo_graphqlEquipinfo_sdlEquipinfoGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../module/equipinfo/equipinfo_graphql/equipinfo_sdl/equipinfo.graphql", size: 652, mode: os.FileMode(420), modTime: time.Unix(1663139633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ModuleResource_centerResource_graphqlResource_sdlResourceGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x94\x41\x6f\xd3\x30\x14\xc7\xef\x93\xf6\x1d\x22\xf1\x15\xa6\x1d\x72\x43\x42\x42\x3d\x70\x01\xc4\xa5\x42\x51\x96\xb8\x9d\x45\xeb\x18\xc7\xa9\xa8\x26\xa4\xae\x62\x94\xb6\x0c\x7a\x59\x07\xa2\x1a\x9a\x34\x60\x3b\xac\xd0\xc3\xa6\xb5\x5d\xb5\x2f\x33\xbb\xe5\x5b\xa0\xd4\x4d\x6a\x27\x2e\xca\x38\x70\x4b\x9c\xff\x7b\xf9\x3f\xbf\xf7\x7e\xb4\x8a\x81\xf1\x18\xf8\x5e\x40\x1c\xf0\xcc\x2e\x05\xc0\xd8\x59\x5f\x33\x0c\xc3\xb8\x67\xcc\x2e\xde\xf0\x51\x67\xd6\x1e\xf0\x6e\x83\x75\xf6\xc5\x31\xb1\x80\x85\xec\x32\x30\x8d\x27\x94\x40\x54\x54\xc5\xb7\x57\xe7\xaa\xd8\xd1\x89\x79\xb3\xc6\x06\x47\x22\x82\x77\x87\x91\x76\x0b\x94\x3c\x54\xb4\x08\xf0\x4d\x35\xb7\xd0\xb3\x2f\x13\xd6\xbf\x8c\x13\x7b\x01\xa2\xa4\x9a\xb4\xb1\x90\x9e\xfc\x60\xef\x47\x91\x94\x80\x22\xf4\x90\x5e\x39\xed\xed\xde\x8e\x27\x91\x12\x13\xaf\x02\x91\x93\x2a\x6e\x91\xf5\xeb\x07\x76\x55\x8f\x0d\x40\xba\xe2\xef\x8e\xed\x6c\x83\x58\x16\xbe\xe8\x75\xb3\x56\x7d\x5a\x8f\xab\x47\x9e\x9b\xd6\xf5\x46\xec\xf3\xe9\x74\x30\x66\x47\xed\x48\x17\x76\x4c\xdb\x01\xde\xdb\x67\xad\x63\x55\xec\x03\x52\x81\x0e\x98\x07\xad\xd0\xb7\x2e\x79\x6d\x37\xa9\xf7\xa9\x4d\x03\x3f\x19\x31\x6d\x0e\x79\xbf\xc5\xce\x0f\x79\xff\x82\x37\xcf\xd8\xde\x5e\x1c\x87\x81\x03\xed\x92\x85\x6d\x62\x97\x53\x71\x10\x57\x36\xd8\xbb\xc3\xd9\xf1\x69\xa4\x87\xd8\xaa\x6c\x98\xf9\x1c\x7e\x5a\xc5\xe0\xb9\xa4\xdb\x4c\xeb\x36\x25\xdd\xeb\xf5\xb5\xf5\xb5\xf9\xcc\x8a\xa3\xe5\xac\xde\x74\x66\x9d\x6f\xec\xe0\x6d\x1c\xe9\xe3\xb4\x0d\x56\xbb\x5e\x66\x4e\x7f\x56\xef\x02\xe2\xe8\x1a\x72\x88\xca\xbf\x7e\x00\x28\x70\x68\xb4\x34\x39\xe4\x82\x57\x0b\x1f\x30\x7c\x36\xf3\x22\xaf\xb0\x0b\x11\x0e\x68\x2a\x04\x07\x34\xb4\x1f\xed\xda\xea\x36\xf9\xc1\xd6\x5f\x9a\xf8\x32\x00\xa4\x6a\xbd\x00\x55\xdd\xb1\x3a\x23\x73\xfb\xc2\xcc\x43\xa0\x3a\x49\x6e\xbc\x98\xce\x78\x31\xa5\xb5\xd4\xee\xbc\x32\x71\xc0\x17\x36\x75\xc2\x25\x16\x80\x2f\xdc\x25\x54\x37\x0d\x3e\x3e\xe1\xdd\x21\xbb\xfe\x28\xce\x0a\xb0\x44\x01\x51\x2f\x54\xaa\xe2\x91\xed\x6c\x43\x24\x3a\xf0\xbf\x2a\x99\x7b\x64\x8d\x09\x3f\xf8\xf5\xbb\xd6\xe4\xed\x33\xd9\xa9\x88\x58\x8e\x8b\x70\x1a\xdb\x2c\x78\x5a\x97\x09\xc2\xde\x81\xaf\x5a\xba\x6a\x70\x99\x1d\x96\x19\x51\x99\x1d\x94\x99\x30\x99\x11\x92\xd9\x10\xb9\x12\x90\xda\x99\x20\x8b\x4d\xc8\x88\xd4\xbb\x01\xf5\xdf\x70\xba\x0a\xa6\xd2\x48\xe5\x70\x3c\x4d\x3b\xea\x7d\x89\xfb\x80\x6e\xa2\x3a\xe8\x9a\xc6\x7c\x2e\xb5\xb8\xd4\xc0\x92\x7f\xfa\xc9\x3a\xdf\x43\x72\x47\x12\x2b\x7c\x51\xb2\x48\x40\x95\x71\x2a\xf9\x54\xb9\x77\xdf\x75\x25\x68\x97\xc5\x5a\x58\x10\x15\x3c\x33\xb9\x23\x51\x56\xf1\x35\x2f\xd5\x2b\x28\xf0\x27\x00\x00\xff\xff\xa7\xf4\xeb\xff\xb8\x08\x00\x00")

func ModuleResource_centerResource_graphqlResource_sdlResourceGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_ModuleResource_centerResource_graphqlResource_sdlResourceGraphql,
		"../module/resource_center/resource_graphql/resource_sdl/resource.graphql",
	)
}

func ModuleResource_centerResource_graphqlResource_sdlResourceGraphql() (*asset, error) {
	bytes, err := ModuleResource_centerResource_graphqlResource_sdlResourceGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../module/resource_center/resource_graphql/resource_sdl/resource.graphql", size: 2232, mode: os.FileMode(420), modTime: time.Unix(1663139633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ModuleTaskTask_graphqlTask_sdlNet_detectGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x41\x6b\xdb\xc8\x17\xbf\x1b\xfc\x1d\x04\x39\xfe\xff\x7b\x5b\xf6\xe0\x3d\x2d\x1b\x28\x86\xed\x52\x68\xf7\x54\x8a\x10\xd2\x44\x19\x62\x4b\x5a\x69\xec\x25\x94\x40\x52\xdc\xc4\x9b\x6e\x52\x87\xa6\x4d\x1a\xbb\x8d\x1d\xe8\xc6\x97\xda\x59\x70\x52\x62\x6d\xc9\x97\xf1\x8c\xe4\x6f\xb1\xc8\x33\x92\x47\xd2\xc8\xf6\x92\x0d\x6c\xf7\x12\xe2\xd1\x7b\xf3\xde\x9b\xf7\x7b\xbf\xdf\xcc\x92\xe4\xdf\x1c\xe2\xe6\x7b\xdc\xbf\xc6\xc3\xc3\x91\xeb\xe2\xdd\x0e\xae\x1f\xf9\x9d\xee\xff\x70\x7d\x7b\xdc\xb9\x1c\xdd\x74\xc8\x56\x3f\x9f\x43\xeb\x16\x90\x7e\x04\xe8\x91\xe2\xac\x3d\x0a\xfe\x7f\x9a\xcf\x49\x92\x24\x2d\xf1\x3e\xa1\x71\xf0\x01\x29\xce\x9a\x5c\x82\x0e\x2a\x48\x8f\x03\xbf\x75\x0b\x3c\x61\x2e\xf1\x9d\x83\x25\x4b\xd1\x81\x0c\x8d\x15\xb3\x20\x3d\x50\x74\x50\x34\x56\xcc\xc0\x21\x9f\xdb\xc8\xe7\xf2\xb9\xec\x24\xb9\xbc\xd2\x39\x41\x8d\xfe\x84\x5a\x41\x2a\x1a\x88\x7d\x23\xaf\xf6\x46\x9f\x5b\xa3\xe1\x10\x1f\x1c\xd3\x25\xd3\x02\xb6\x82\x4c\xbb\x20\x3d\x44\x36\x34\xf4\x78\x61\x8d\x3d\xae\x1e\x43\x29\x83\x84\x19\xb4\xbc\x3f\x5c\xfc\xfe\x05\x8b\x65\xc9\x41\x46\xb1\x80\xcd\x01\x79\x73\xe1\x1d\x76\x49\xfd\x13\x5d\xaa\x58\x9a\x82\x40\x32\x9e\xbf\x75\x82\x1b\x75\xa4\xb0\xdf\x8a\xae\xdb\x32\x52\x74\x61\x56\xb4\x08\xbf\x3f\x20\xc7\xfb\x5c\x7a\xaa\x59\x2e\x03\x03\x25\x5c\xc8\xfe\x19\xb9\x7c\xc1\xca\x99\x1c\x21\x69\x0d\xf1\xdb\xae\x77\x52\x23\xad\x3d\xbc\xdb\xe1\x0b\xd0\x00\x02\x2a\x92\x1d\x60\x57\xa1\x0a\x58\x31\x82\xed\xf0\xde\x4b\xbf\xd7\x8b\xf9\x58\xb6\x89\x4c\xd5\x2c\xcd\x08\xef\xed\x5e\x91\xcd\x2d\x2e\x63\x07\x29\xa8\xe2\xf0\xc7\xe5\x35\x7b\xa4\xbd\x43\x5a\x43\xff\xb2\x46\x86\x0d\xf2\xe6\x3a\x34\xb7\x75\x80\x64\x1b\x38\x66\xc5\x56\x93\x49\x79\xcd\x03\xb2\x7f\x9e\xf6\x2a\x9b\x06\x44\xa6\x9d\xe5\x16\x3b\x9a\x3f\x37\x71\xa3\x9f\xce\xf0\x17\x88\xd4\x55\x3e\x43\xfc\xf1\x98\x0c\x5c\x7c\xd0\x25\xad\x53\xba\xe4\x54\xec\x2a\xac\x2a\x25\x19\xc1\x72\xac\xf7\x6c\xe7\x97\xcf\xc8\xeb\x8b\x10\xe9\xb6\x52\x76\x84\x4d\xf5\xdc\x57\xe4\xdd\x29\x39\xba\x1a\x1f\x0d\xe8\x07\x60\x68\x6c\x4b\x11\x32\xeb\x4d\xec\x0e\x79\x73\xd5\x06\x0a\x02\x9a\xac\x24\x11\xc0\x40\x33\x01\x22\xef\x40\x81\x28\x70\x88\x8e\x93\x0e\x69\x38\x6c\xdc\x89\x3a\x05\xe9\xf1\xf2\xa4\xef\xf7\x15\x75\x15\x1a\x93\x99\x7d\x92\xec\x61\xda\x9d\xb6\x71\xa6\x77\x78\x1a\x35\x91\xb7\xb3\x26\xeb\xb6\x59\xb1\x9c\x82\x44\x37\x08\x08\xe9\x5e\xb0\x12\x11\xc6\x92\x44\xf1\x1d\xa3\xae\x54\xb4\x90\x2b\xc4\x2c\x11\x1d\x00\x3f\x1b\xa9\xc9\x9e\xa0\x27\x08\xf6\xb1\xc1\x8e\xb8\xbd\xe3\xf7\x2e\xc2\x5c\x75\xa1\x31\xf9\xed\x60\xbc\xf9\xab\x7f\x5e\xc3\xf5\xb7\xf4\x5b\x09\x96\xa1\x78\x68\x03\x40\x73\x86\x76\xa5\x24\x46\x70\x60\x77\xd3\xf0\x1b\x1f\xf0\xeb\x6d\x56\x8e\x63\x65\x59\xa6\x87\x7e\xd6\xb4\x4f\x40\xe3\x6f\x3e\x9f\x45\x5d\x51\xfd\x11\x5b\xaa\xab\xb0\xa4\xc9\x59\x9c\x99\xb6\xcf\x20\x83\x3b\x45\x3a\xd3\x16\x5e\x4f\x02\x4a\x7c\xd7\x19\xb9\x57\xa4\xd1\xf2\x06\x67\x52\x94\xa5\x77\x7e\x21\xd1\xfd\x48\xef\x92\x2d\x17\x35\x89\xcf\xcf\xdf\x7c\x2e\x79\x87\xdd\xd1\xe7\x16\x69\x5f\x93\xbd\x5e\x71\x99\x9c\x7e\xf0\xfb\x67\xf9\x1c\x34\xac\x0a\x92\xee\x01\xc4\xf4\xf3\x07\xe8\xa0\x62\xb0\xb6\xb0\x68\x2d\xa8\x45\x89\x74\x12\xf2\x26\x40\x43\xf1\x81\x48\xbc\xa6\x71\xa9\x26\x85\x52\x34\x53\x98\xfe\xae\x2c\x64\xb5\xd6\x41\x8a\x8d\x66\x34\xd6\x73\xb7\x93\x14\x39\xbf\xa9\x12\xcd\x8e\xf1\x52\xd0\xdb\x76\xb2\x2d\x01\x2d\x89\x1b\x13\xb1\x59\x8c\x0b\xa8\x1c\x25\x29\x61\xaa\x5e\xf1\x71\x64\xe6\xb1\xa9\xa4\x54\xf5\xc9\xc5\xbb\x6d\xef\xa4\x16\xbf\xd6\xd0\xdc\xbe\xd3\x34\x06\x99\x2c\xb8\x50\x68\xce\x46\x05\xad\x1d\x5a\xe3\xa3\x01\xad\xe0\xff\xa4\x7f\x88\x7f\x7f\x06\xad\xea\xd7\xdf\x06\x7f\xbe\x82\x56\xf5\x9b\xcc\xfb\xcb\x97\x77\xe3\xa0\xe4\x4d\x6f\x02\x19\xd7\x80\x84\x7d\xd0\x34\xde\x3e\x79\xd9\xb8\xcd\x85\xe6\x5f\x72\xc7\x98\x7b\xbd\x64\x93\x13\x01\x32\x92\xc0\x38\x1a\xef\xd3\xa3\x14\x8d\x89\x40\x32\xc3\x83\x4f\xcf\x49\x78\x5f\xe3\xe4\x2d\xea\x52\x5a\xe6\xa6\xf6\xf1\xb9\x0a\x5d\xd2\x72\x17\x79\x2c\x2a\x77\xe9\xfa\xd9\x28\x27\xa7\x31\x80\xc6\x3f\xc5\x12\x5c\xf5\x21\xe6\x44\xc5\x2f\x4e\x2a\xb7\xab\x9d\x3e\x55\xc4\x64\xf4\xd3\x44\x42\xe7\xf0\xd1\x1c\xf9\xfa\xef\x73\xd5\x02\xdc\x23\x6a\xee\x2c\xf2\x11\xe5\x3b\x3e\x3b\xf0\xf6\x77\x62\x49\xad\xd8\xe0\xe7\x0a\x30\xd4\x75\x11\x5b\xdd\xd9\x73\xed\x8b\x62\x37\x0a\xe4\x65\x50\x02\xb7\x02\xb2\xe7\xd6\xc2\xcf\xd3\x07\x89\x1c\x59\x8a\x42\x7d\x1f\xdc\x87\x17\x89\x37\xd9\x70\x6e\x50\x7d\x1a\x8a\x06\x7a\xa8\x54\xef\x30\xcc\xed\x2e\xf9\x0b\x3d\xfa\x33\x09\x8b\x4d\xc3\xdc\x91\x13\x3a\x87\xb3\x37\xd3\x9b\x91\x2b\x74\xac\x14\xad\x8a\xe3\x44\x96\xbc\xfa\x88\x4d\x63\x76\xc2\x57\x6f\xd4\xa9\xd4\xe3\x99\xcf\x66\xae\xeb\xc6\x14\x72\x59\x56\x4f\x93\x0f\xc1\x85\xde\xb6\x8b\xbe\x3f\x29\x6b\x66\x3e\x6e\x93\x38\x13\x03\x71\xe3\xaf\x00\x00\x00\xff\xff\x00\x50\xc2\x76\x90\x14\x00\x00")

func ModuleTaskTask_graphqlTask_sdlNet_detectGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_ModuleTaskTask_graphqlTask_sdlNet_detectGraphql,
		"../module/task/task_graphql/task_sdl/net_detect.graphql",
	)
}

func ModuleTaskTask_graphqlTask_sdlNet_detectGraphql() (*asset, error) {
	bytes, err := ModuleTaskTask_graphqlTask_sdlNet_detectGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../module/task/task_graphql/task_sdl/net_detect.graphql", size: 5264, mode: os.FileMode(420), modTime: time.Unix(1674056073, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ModuleTaskTask_graphqlTask_sdlResourceGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x95\xdf\x6a\xd4\x4e\x14\xc7\xaf\x1b\xc8\x3b\x0c\xec\x3b\xf4\x22\x97\xbf\x9b\x1f\xbd\xf0\xa6\x8a\x37\x45\xc2\x34\x99\x6e\x07\xd3\xc9\x90\x4c\x16\x83\x14\x44\x2b\x0a\xdd\xd5\x45\xaa\x42\xad\x5d\x2b\xac\x14\x41\x57\x05\xb5\xdd\x5d\xf0\x65\x36\xd9\xbd\xeb\x2b\xc8\x64\x66\x92\x4c\x36\xa9\x05\xff\xec\xd5\x9c\x93\x4f\xce\x39\xdf\x73\x66\x4f\x5a\x20\x1d\x0c\x17\xa3\xb7\x8b\xaf\x7b\xe9\xb8\x3f\x3f\xdc\x4b\x9e\xde\x4f\x9f\x7f\xba\x98\x76\x85\x27\xe9\xf7\x92\x67\xea\x7c\x6f\x6a\x1a\x98\xd0\x88\x81\xff\x11\x5b\x47\xa1\x1f\x05\x0e\x5a\xe3\x8e\x1b\x31\x45\xe0\xae\x69\x00\x00\x40\x0b\xc8\x60\x9f\x27\xc9\xf1\xbe\xf0\x05\x12\xb6\xc0\x75\x16\x60\xd2\xd6\xc9\x2c\x70\x19\xb3\x6f\xa3\xf8\x17\xe8\x16\xf6\x18\x0a\x6c\x16\x53\x64\xad\x11\x66\x1a\xbb\xa6\x61\x1a\x2d\x90\x1c\x9d\x0a\x12\xbb\xe9\xd1\xfb\xf9\x60\x38\x3f\xdc\x4b\x5f\x9f\xcc\x26\xdf\x66\x67\xfb\x17\xd3\x6e\xfa\xe6\x3c\xed\x7d\xe4\xaf\xcd\x26\x4f\x08\xdc\x41\x8b\x1f\x07\xc9\xab\xe3\x64\x74\x9e\x8c\x0f\x92\xee\x38\x19\x0c\x64\xa6\xc7\x2f\x17\x27\xa7\xa6\xc1\x51\xb0\x8e\xda\xd8\x27\x4a\x32\x57\x1b\x16\x72\xb1\x2b\x4e\xd8\xb5\x56\x6a\x6b\xee\xf7\x84\x83\xa7\xab\xca\xea\x40\x2f\x42\xb9\xaa\xcc\x0a\x2d\x70\x0d\x3a\xdb\x98\xa0\x9b\xdc\x2c\x4b\x4b\xbe\x7f\x99\x0f\x86\xe5\xfe\xe6\xd3\xc1\x6e\x55\x69\x69\xb0\xd9\xc3\xc5\xe8\x5d\xfa\xe0\x61\xae\x48\x8d\x6f\xcb\xff\xd7\x7a\x04\x49\x03\xbf\x83\x89\x83\xd4\xe8\x79\x87\x2d\x00\xc0\xc6\x3a\x0a\x6f\x29\xc8\xf1\x23\xc2\x82\xd8\xc6\x21\x95\x45\x85\x94\x43\x3a\x95\x29\xe2\xd5\x08\x07\x37\x45\x6d\x20\xaf\x2e\xeb\xa1\x52\xfe\x57\xb5\x96\x87\x96\x25\xcc\x1c\x45\xca\xd9\xd9\x87\xf4\xc5\xa3\x3c\xb0\x63\xab\x52\xeb\x8a\x95\x8d\xbb\x7c\x4a\x40\xfd\xf4\xf2\x8a\x86\x14\x19\xaa\x8c\x28\x5a\x17\xc0\x7f\x75\x03\x73\x11\x45\xc4\x95\xb0\x34\xc4\x2c\x44\xcc\x7c\x1c\x3b\xe2\x65\x61\x4a\x43\x84\xdd\x90\x71\x7f\x67\x78\xd4\x27\x21\x5a\x23\x2e\xba\xf3\x5f\xac\xf5\x24\x90\xcf\x6c\x17\x32\x68\x95\xaa\x5a\x6a\x67\xd3\x15\xf8\xc3\x8d\x5c\xa9\xeb\xe2\x55\xe5\xb6\x80\xd8\x49\xe2\x92\x95\x97\x51\x39\xea\x95\xae\x55\xbd\x2a\x07\x3a\xdb\xb2\x88\x4d\xe4\xf9\xa4\x6d\x67\x9e\x7a\x79\x0e\x66\xb1\xce\x62\x16\x5b\x0d\x81\xc5\x7f\x56\xc7\x85\xcf\xaa\xeb\xae\xef\xea\x65\x70\x47\x43\x68\x7d\x67\x48\x5e\x39\xad\x65\x5e\x6c\x15\x8d\x2e\x16\xcd\x12\x1d\x32\xc8\x22\x39\xc3\x2d\x18\x79\xcc\x16\x9e\xfa\x96\x94\xe9\x6d\x48\xda\x15\xb8\x42\x63\xb5\xbf\xa8\x3e\x93\x3a\x92\xc1\x4d\x0f\x85\x76\x39\x41\xc5\x59\x23\x15\x60\xda\x59\x55\x70\x67\xb5\x9a\xa5\x92\xa3\xba\x4e\x9b\x51\xe2\x07\x3b\xd0\xd3\xd4\x0a\xd7\x65\x77\x2b\xa4\xc8\x2e\xee\xb8\xb2\xac\x66\xbe\xe3\x64\x9f\x72\xc9\x4b\xab\x99\xa7\x30\x40\xfc\xa3\xcf\x2d\x71\xae\x63\x77\x4d\xe3\x67\x00\x00\x00\xff\xff\x63\x6c\x67\xec\xe0\x08\x00\x00")

func ModuleTaskTask_graphqlTask_sdlResourceGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_ModuleTaskTask_graphqlTask_sdlResourceGraphql,
		"../module/task/task_graphql/task_sdl/resource.graphql",
	)
}

func ModuleTaskTask_graphqlTask_sdlResourceGraphql() (*asset, error) {
	bytes, err := ModuleTaskTask_graphqlTask_sdlResourceGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../module/task/task_graphql/task_sdl/resource.graphql", size: 2272, mode: os.FileMode(420), modTime: time.Unix(1663139633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ModuleTaskTask_graphqlTask_sdlTask_groupGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\xe5\x52\x56\x78\xba\x7e\xe7\xd3\x5d\x53\x9e\xec\xde\xfd\xb4\x6b\xe1\xd3\x8e\xe9\x2f\x16\xae\x78\x3e\xab\x05\xc2\x7d\xbe\xbb\xe5\xc9\xfe\x85\xcf\x1a\xd7\xf3\x72\x95\x54\x16\xa4\x2a\xb8\xa4\x96\xa4\x26\x97\x84\x24\x16\x67\xbb\x17\xe5\x97\x16\x84\x80\xc4\xaa\x79\xb9\x14\x14\x14\x14\x94\x33\x53\x20\x8c\xcc\x14\x2b\x05\xcf\xbc\x12\xa8\x28\xdc\x9c\xa7\x13\x7a\x21\x42\x25\x89\xc5\xd9\xf1\xe9\x20\xed\x56\x0a\xc1\x25\x45\x99\x79\xe9\xbc\x5c\xb5\x20\x77\x3c\xdb\xbe\xfb\x69\xd7\x82\xe7\xb3\x5a\x9e\xcf\x5e\xf7\x6c\x41\xfb\xb3\x39\xbb\x78\xb9\x32\xf3\x0a\x4a\x4b\x14\x1c\x53\x52\xd0\x6c\xf6\x04\x89\xa3\x58\xaf\x40\xb4\x4d\xf8\xed\x0a\x2d\x48\x49\x2c\x49\x25\xc1\x3a\xec\xfe\x26\xd6\x39\x80\x00\x00\x00\xff\xff\x4d\x34\x7e\x7d\x81\x01\x00\x00")

func ModuleTaskTask_graphqlTask_sdlTask_groupGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_ModuleTaskTask_graphqlTask_sdlTask_groupGraphql,
		"../module/task/task_graphql/task_sdl/task_group.graphql",
	)
}

func ModuleTaskTask_graphqlTask_sdlTask_groupGraphql() (*asset, error) {
	bytes, err := ModuleTaskTask_graphqlTask_sdlTask_groupGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../module/task/task_graphql/task_sdl/task_group.graphql", size: 385, mode: os.FileMode(420), modTime: time.Unix(1663139633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _InternalGraphqlSdlBaseGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\xc1\x4a\x2b\x31\x14\x86\xf7\x81\xbc\xc3\xb9\x74\x7b\x9f\xa0\xbb\x0b\x77\x33\x2e\x44\x6c\x77\xe2\x22\xb4\xa7\x43\xa0\x93\x89\x49\x66\xa1\xa5\xd0\x82\x48\xbb\x28\x2e\x6a\x29\x88\x82\xb3\x73\xd5\xba\xb0\x5d\x58\xaa\x2f\xe3\x4c\x9d\xb7\x90\xcc\x4c\xc7\x71\xd0\x5d\x92\xf3\xe5\x3f\xdf\x09\xe1\xc2\xa0\xea\xb0\x16\x82\xd3\x76\x8a\x75\x8f\x12\x00\x00\xde\xae\x83\x23\x0c\x25\x7d\x4a\x28\xe1\x42\x06\x06\x9c\xff\xff\x94\xab\x2b\xc4\x9f\x1c\xa9\x81\x64\x2e\x17\xcc\x20\x28\x3c\x0b\x50\x1b\x90\x4c\x31\x0f\x0d\xaa\x7d\xc0\x51\x46\x70\x5f\xec\x43\x6a\x10\x6d\xa7\xd1\x78\x12\x8f\x07\xd1\xdd\x63\x12\xae\xe2\xd9\x53\x56\x91\xcc\xc5\xc3\xc0\xcb\x7a\xfc\xad\xd0\xcb\x6b\x8b\xde\x87\xdf\xe8\x06\xbf\xc0\x02\xcf\x9d\xa2\xd1\x55\x12\xae\xde\xdf\xc2\x78\xb8\xa4\xc4\x9c\x4b\xb4\x12\xe8\x88\x8e\xdf\xb4\x9b\x2f\x8d\x14\xdc\xdd\x5e\xc6\x83\x4d\x59\xc3\xf8\x86\x75\xf3\xa7\x28\x2b\x58\x66\xb0\x29\x2b\xb4\x02\xa5\x50\x98\xbd\x73\x81\x4f\x66\x49\xb8\xfa\x58\xbc\xee\xb6\x0b\x1b\x5f\x96\x46\x65\x65\x7e\x48\xcf\x6c\xaa\xd1\x25\xf8\xf7\xf1\x8e\x51\x4b\x5f\x68\xac\x8c\x37\x9d\x44\x2f\x37\xbb\x87\x61\x1e\xe8\xb7\x2b\x6d\xd3\x7a\xbc\x1e\xa5\x41\xf6\xcc\xd3\x6e\x1d\x1a\x46\x71\xe1\x16\xed\xe2\xf9\x3a\x99\x3f\x53\xa2\x5b\xac\xcb\x14\x34\xb9\x87\x59\xe1\x40\xfb\xa2\x0e\x1e\x93\x27\x3a\xbd\x71\x5a\xfc\xad\x5e\xbf\xc0\x2d\x44\xc9\x67\x00\x00\x00\xff\xff\x0b\x0a\xef\x65\x76\x02\x00\x00")

func InternalGraphqlSdlBaseGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_InternalGraphqlSdlBaseGraphql,
		"../internal/graphql/sdl/base.graphql",
	)
}

func InternalGraphqlSdlBaseGraphql() (*asset, error) {
	bytes, err := InternalGraphqlSdlBaseGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../internal/graphql/sdl/base.graphql", size: 630, mode: os.FileMode(420), modTime: time.Unix(1663139633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _InternalGraphqlSdlDemoGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\xdd\x4e\x1b\x47\x14\xbe\x47\xe2\x1d\xc6\xf2\x8d\x2d\xf9\x09\xf6\xce\xc5\x2d\x42\x0a\xfd\x31\xa1\x37\xc8\xb2\xb6\xde\xc3\xb2\xed\x7a\xbd\xdd\x9f\x0a\xab\x8a\x14\xaa\xa0\x12\x42\x12\xab\x8d\x92\x12\x48\x03\x6d\xa8\xaa\x56\x40\x7f\x81\xc4\x4d\x79\x19\xcf\x62\xae\xfa\x0a\xd5\xce\xcc\xce\xce\xce\x7a\xfd\x53\x68\x7b\xe7\x3d\x73\xce\x77\xbe\x33\xf3\xcd\x9c\x03\x5e\xdb\x06\x54\x01\x0f\x1a\xde\x7b\x3e\x38\xed\x77\x3e\xf8\x10\x1a\xde\xcd\xb6\x0d\x9f\x4e\x4f\x21\x84\x90\x0e\x5e\xd9\x34\x2b\xb0\x6c\x58\x70\x53\x75\x3f\xba\x61\xb8\x9e\x82\x96\x68\x48\x6c\x0e\x23\x6a\x34\x42\x03\xc1\xbd\x60\xa9\x4d\x50\x16\x3c\xc7\xb0\xf4\x5c\x51\xa9\x80\x59\x05\xd7\x37\x49\x86\xe9\xa9\x5b\xd3\x53\xd3\x53\x02\x85\x79\xdf\x53\x3d\xa3\x65\xa5\x58\x34\x5b\x5a\x06\x66\x49\x93\x98\x20\x05\xc9\xe4\xe6\x2c\xdb\x27\x68\xb9\xa2\x32\xdf\xd2\x44\x06\x21\x78\xc3\x01\x55\xf0\x2e\x4c\x88\x38\x13\x86\x0f\xae\xaa\xac\xeb\x0e\xe8\xa4\xa4\x30\x4a\xda\x61\xc4\x8a\xcb\xa3\x60\xeb\x6e\xf0\x6c\xbf\xd7\x3d\xe9\x3f\x38\xc5\x0f\x1f\xf7\xd7\x9e\xe2\xce\x06\xde\x78\xd2\xdf\xff\xbe\x77\xbe\x1f\xac\x1d\xc7\x67\x11\x23\x86\x27\x51\xb0\x55\x1d\x14\xf4\xae\xaa\x1b\x16\x31\xe6\x4a\x6a\x32\xa7\x82\x66\x53\x51\x9c\x7d\x51\x41\x33\xbe\x63\x8a\x34\x87\x57\x90\x79\x40\xf9\xe0\xb4\x8b\x37\xf7\xe8\x87\xaa\x69\x52\x5c\xc1\x23\x54\x48\xb2\xc4\x62\xbc\x91\x25\xd7\x6f\x34\xc0\x75\xeb\x8e\x6f\x82\xab\xa0\x25\xe6\xbc\x40\xcd\x55\xdf\x04\xee\x5c\xcb\x95\x96\x55\xc3\xf4\x1d\x90\xbd\xdf\xa2\x66\xee\x5d\xcb\x15\x15\x54\x05\xd7\x6e\x59\x2e\xc4\x47\x9e\x0f\x76\x7e\x0b\x1e\xff\x44\x3f\x7c\x5b\x53\x3d\xc8\x66\xbc\x28\xaf\xff\x5f\xa4\xf1\xc6\xde\xe5\xf6\x0b\x7e\xcb\x20\x4d\x3a\x04\xa4\xa4\x2b\xf2\xba\x28\x59\x09\x9c\x1c\x77\x1e\x05\xcf\x0f\xfa\xc7\xdf\xf4\x7f\xbf\x13\xbc\xea\x5c\xec\x9c\xe1\xf5\x5f\x83\x2f\xef\xf7\x5e\xef\x32\x29\x54\xc1\x6d\xf9\x4e\x03\xb2\x55\xbc\xfb\xc3\xc5\xf3\x03\x1a\x6f\x68\x7f\xfd\xb1\x15\xec\xbd\x0c\xee\x1f\x31\xc0\x9f\xbb\xf8\xeb\x7b\x62\x0a\xaa\xef\xa5\xe0\xf8\x11\xfe\xee\x33\xbc\xf3\x1a\x1f\x9d\x50\x53\x8d\xab\xbd\x0a\xba\xd1\xb2\xa2\xc4\x44\xf0\x3a\x78\xf5\xa6\xda\x58\x31\x2c\xa8\xab\x8e\x4e\xe4\x1d\x39\x88\xba\x5e\x4a\xc6\x86\x56\xb7\x16\x31\xc5\xa7\xbf\x8c\x62\x8a\xbf\xd8\x8a\xd6\xd3\xa4\x05\x82\x51\xe6\xe5\xd6\xa4\xf4\xe2\xc8\xab\x93\x0b\x76\x5f\xe1\x6d\xf6\x56\x48\x14\xe7\x29\x9b\xc9\x19\x0a\x81\xff\x2a\xc1\x7f\x74\xbc\x91\x80\xe7\x2c\x0d\x56\xdf\x68\x13\x82\xb2\x90\x8f\xfe\xc4\x2f\x3e\xa7\x29\x07\xc8\xf9\xcd\x8f\x7d\xc3\x0e\x8b\xcb\xd4\x33\x7b\x8c\x09\xcc\xc5\xe6\x49\x70\x7b\x4d\x62\xce\x21\x08\x75\x08\xbf\x08\x61\x66\x17\xf6\x92\x7b\xb2\x3e\x79\x4b\x26\x91\x7e\x58\x63\x1e\xbd\xf3\xa3\xe0\xd1\x4b\xca\xe3\x72\xbb\x83\x37\x4e\x58\xdf\x5a\x51\x2d\x1d\x6e\x18\x4d\x83\x27\x9f\x89\x4d\x42\xfe\xd4\x6d\x8f\xb6\x08\x1f\x3e\xc1\xeb\x67\x89\x2d\x7a\x70\x80\x1f\x7e\x1b\x35\x65\xa3\x11\x72\x52\x9d\xf6\x7f\x78\xe7\xe3\xa4\x7c\x67\xd3\x4d\x4e\xe3\x4e\x64\xc3\xc5\x18\x56\x75\xa9\xa9\xda\xb6\x61\x51\x05\xcd\xd3\xdf\xe2\x91\xc4\x21\xb1\x76\xf2\x88\xb6\x85\xb1\xb7\x65\xc8\xa9\xd1\x7e\x48\x91\x78\x57\x4c\xd6\x56\x10\xab\x28\x27\x57\xe3\xb7\x7a\x50\xf3\x22\xd8\xac\x40\x0e\xce\x8b\x5c\x6e\x15\x78\xf1\x72\xe5\x19\x80\x42\xd9\x62\x4f\x1c\xc2\x77\x31\xe5\x30\x46\x86\x04\x65\x9a\xe2\x0a\xac\xd3\xed\x70\x08\xdf\xb9\x4a\xd9\xd1\xdd\xb1\x1b\xeb\x40\x5a\x59\x18\xe4\xd9\x89\x6f\x15\xea\x75\xbb\x78\x73\x9f\x0a\x1b\xbd\x0d\x1e\x19\x22\x07\x3c\x41\x6c\x69\xdc\xb1\x50\x84\x95\xc6\x42\x86\x94\x71\x5b\xbc\x68\x0e\x14\xdc\xc4\xbb\xc0\xcc\xf2\xec\xc7\xcc\x23\x45\xce\x15\xc8\x02\xd8\xe8\x54\xe6\x06\x61\x5e\xa2\xb3\x75\x3d\xf4\xa8\xeb\x4e\xcb\xb7\x5d\x2a\x7d\x62\x0e\x7d\x67\x43\xe3\x90\x59\x25\x63\x7a\x4b\xa6\x5e\x14\x6d\x23\xb2\x33\x21\x4f\x46\x20\x2d\x98\x24\x81\x8a\x68\x1b\x05\xd6\x3b\x7f\x86\x0f\xbf\xc2\x87\x1d\x7a\xc0\xd4\xea\xaa\x9f\x84\xf1\x33\x2b\x86\xa9\x11\xe0\x46\xf8\x4b\x41\x0b\x92\x7d\x3c\xa6\x12\x38\xa7\x9c\x82\xaf\xa4\x56\x46\xcd\x8d\xc2\x9f\x6f\x51\xa3\x1e\xd6\xcc\xa8\x64\xc4\xfe\xd0\x3b\xbb\x17\xdc\xbd\x8d\xb7\xd6\x71\xe7\xc7\x8b\xa7\x77\xe8\x92\xa8\xef\xb2\xa6\x89\xd3\x52\xc1\x91\xe7\x01\x25\x99\xbe\xac\x69\xd9\x8f\x06\x23\x20\xce\x23\xe9\x2c\xf6\x75\xe4\x21\x1a\x4d\x57\x43\xf5\x76\x8d\x05\xd1\x13\xa6\x89\xa8\x8d\x1e\xe2\xb5\xa7\x30\x6c\xb1\x0e\x29\xc9\xd5\xb6\x2c\x4b\x49\xd9\x4f\xe3\xe4\x32\x9a\x95\x46\xcd\x34\x57\x79\xd6\xcc\x15\x15\x3e\xa7\xbf\xaf\x9a\x7e\xf4\x1f\x8e\x84\x9f\x06\xab\x05\x71\xcc\xd6\x60\x95\x04\x2b\xb3\x03\x8c\x45\x69\x3f\xc8\x0a\x29\xff\xef\x00\x00\x00\xff\xff\x52\xd8\xb6\x26\x89\x11\x00\x00")

func InternalGraphqlSdlDemoGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_InternalGraphqlSdlDemoGraphql,
		"../internal/graphql/sdl/demo.graphql",
	)
}

func InternalGraphqlSdlDemoGraphql() (*asset, error) {
	bytes, err := InternalGraphqlSdlDemoGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../internal/graphql/sdl/demo.graphql", size: 4489, mode: os.FileMode(420), modTime: time.Unix(1663139633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _InternalGraphqlSdlSchemaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xbf\x4a\xc4\x40\x10\xc6\xfb\x85\x7d\x87\x01\xdf\x62\x3b\xe1\x2c\x2c\x54\x94\xeb\xc3\xba\x37\xb7\x17\x35\x9b\x64\xb3\x29\x82\x1c\xd8\x5e\xa3\x8d\x08\x82\x20\x28\xd7\xde\xd5\x56\xbe\x8c\xb7\xf8\x18\x92\x3f\x7b\x22\xcc\x06\xac\x66\x32\x33\xdf\x97\x8f\xdf\x56\x6a\x81\x99\x84\x5b\xce\x00\x00\xca\x1a\x6d\x23\xe0\xbc\x2d\xfd\x24\xab\x9d\x74\x69\x6e\x04\x9c\x0c\x1d\x67\x4b\xce\x0e\x60\xb7\x79\xf6\x4f\x5b\x6d\x65\xb1\x28\x6f\xfc\xea\xce\xbf\xac\xfc\xeb\xfa\x7b\xfb\xe6\xef\xd7\xbb\x87\x77\xce\x5c\x53\x60\xef\x14\xdc\x67\xe8\x50\x39\x01\x93\xae\x76\xab\xb3\xcb\x2b\x54\x6e\xda\x14\xd8\x9f\x48\xad\x2d\xea\xe1\x8f\x87\xbf\x1f\x53\x59\x5d\x93\x02\x8b\x55\x5e\x5b\x85\x02\x2e\x86\x8e\x3c\x9b\xa5\xaa\xb5\x91\xb6\x49\x32\x69\xa4\x46\x2b\x60\xb2\x9f\x91\x12\x83\x2e\x09\x89\x4f\xd1\x45\x13\x60\x59\xa7\x45\x92\x9a\x79\x2e\x8e\xda\xf6\xd8\xcc\x73\x3a\x43\x67\x96\xec\x13\xf7\x18\xa2\xb1\x63\x94\xbf\x3e\x37\xfe\xf1\xe3\x0f\xe5\xf0\x34\x34\xe8\xb0\xfd\x0f\xeb\x98\x66\x9c\x63\x4c\x45\xa0\x8c\x9d\x52\x34\xa3\x61\x46\x81\x52\xaa\x25\x67\x9c\xfd\x04\x00\x00\xff\xff\x95\x55\x29\xbf\xf3\x02\x00\x00")

func InternalGraphqlSdlSchemaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_InternalGraphqlSdlSchemaGraphql,
		"../internal/graphql/sdl/schema.graphql",
	)
}

func InternalGraphqlSdlSchemaGraphql() (*asset, error) {
	bytes, err := InternalGraphqlSdlSchemaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../internal/graphql/sdl/schema.graphql", size: 755, mode: os.FileMode(420), modTime: time.Unix(1663139633, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../module/aggregation/aggregation_graphql/aggregation_sdl/aggregation.graphql": ModuleAggregationAggregation_graphqlAggregation_sdlAggregationGraphql,
	"../module/detect/detect_graphql/detect_sdl/detect.graphql": ModuleDetectDetect_graphqlDetect_sdlDetectGraphql,
	"../module/dictionary/dictionary_graphql/dictionary_sdl/dictionary.graphql": ModuleDictionaryDictionary_graphqlDictionary_sdlDictionaryGraphql,
	"../module/equipinfo/equipinfo_graphql/equipinfo_sdl/equipinfo.graphql": ModuleEquipinfoEquipinfo_graphqlEquipinfo_sdlEquipinfoGraphql,
	"../module/resource_center/resource_graphql/resource_sdl/resource.graphql": ModuleResource_centerResource_graphqlResource_sdlResourceGraphql,
	"../module/task/task_graphql/task_sdl/net_detect.graphql": ModuleTaskTask_graphqlTask_sdlNet_detectGraphql,
	"../module/task/task_graphql/task_sdl/resource.graphql": ModuleTaskTask_graphqlTask_sdlResourceGraphql,
	"../module/task/task_graphql/task_sdl/task_group.graphql": ModuleTaskTask_graphqlTask_sdlTask_groupGraphql,
	"../internal/graphql/sdl/base.graphql": InternalGraphqlSdlBaseGraphql,
	"../internal/graphql/sdl/demo.graphql": InternalGraphqlSdlDemoGraphql,
	"../internal/graphql/sdl/schema.graphql": InternalGraphqlSdlSchemaGraphql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"internal": &bintree{nil, map[string]*bintree{
			"graphql": &bintree{nil, map[string]*bintree{
				"sdl": &bintree{nil, map[string]*bintree{
					"base.graphql": &bintree{InternalGraphqlSdlBaseGraphql, map[string]*bintree{}},
					"demo.graphql": &bintree{InternalGraphqlSdlDemoGraphql, map[string]*bintree{}},
					"schema.graphql": &bintree{InternalGraphqlSdlSchemaGraphql, map[string]*bintree{}},
				}},
			}},
		}},
		"module": &bintree{nil, map[string]*bintree{
			"aggregation": &bintree{nil, map[string]*bintree{
				"aggregation_graphql": &bintree{nil, map[string]*bintree{
					"aggregation_sdl": &bintree{nil, map[string]*bintree{
						"aggregation.graphql": &bintree{ModuleAggregationAggregation_graphqlAggregation_sdlAggregationGraphql, map[string]*bintree{}},
					}},
				}},
			}},
			"detect": &bintree{nil, map[string]*bintree{
				"detect_graphql": &bintree{nil, map[string]*bintree{
					"detect_sdl": &bintree{nil, map[string]*bintree{
						"detect.graphql": &bintree{ModuleDetectDetect_graphqlDetect_sdlDetectGraphql, map[string]*bintree{}},
					}},
				}},
			}},
			"dictionary": &bintree{nil, map[string]*bintree{
				"dictionary_graphql": &bintree{nil, map[string]*bintree{
					"dictionary_sdl": &bintree{nil, map[string]*bintree{
						"dictionary.graphql": &bintree{ModuleDictionaryDictionary_graphqlDictionary_sdlDictionaryGraphql, map[string]*bintree{}},
					}},
				}},
			}},
			"equipinfo": &bintree{nil, map[string]*bintree{
				"equipinfo_graphql": &bintree{nil, map[string]*bintree{
					"equipinfo_sdl": &bintree{nil, map[string]*bintree{
						"equipinfo.graphql": &bintree{ModuleEquipinfoEquipinfo_graphqlEquipinfo_sdlEquipinfoGraphql, map[string]*bintree{}},
					}},
				}},
			}},
			"resource_center": &bintree{nil, map[string]*bintree{
				"resource_graphql": &bintree{nil, map[string]*bintree{
					"resource_sdl": &bintree{nil, map[string]*bintree{
						"resource.graphql": &bintree{ModuleResource_centerResource_graphqlResource_sdlResourceGraphql, map[string]*bintree{}},
					}},
				}},
			}},
			"task": &bintree{nil, map[string]*bintree{
				"task_graphql": &bintree{nil, map[string]*bintree{
					"task_sdl": &bintree{nil, map[string]*bintree{
						"net_detect.graphql": &bintree{ModuleTaskTask_graphqlTask_sdlNet_detectGraphql, map[string]*bintree{}},
						"resource.graphql": &bintree{ModuleTaskTask_graphqlTask_sdlResourceGraphql, map[string]*bintree{}},
						"task_group.graphql": &bintree{ModuleTaskTask_graphqlTask_sdlTask_groupGraphql, map[string]*bintree{}},
					}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

